"""init all tables

Revision ID: 0bfbc263d542
Revises: 
Create Date: 2021-10-10 23:15:21.724206

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from geoalchemy2 import Geography
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0bfbc263d542'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('appeal_statuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('status_const', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_appeal_statuses_id'), 'appeal_statuses', ['id'], unique=False)
    op.create_table('deputies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('patronymic', sa.String(), nullable=False),
    sa.Column('district', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_deputies_id'), 'deputies', ['id'], unique=False)
    op.create_table('map_layers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('object_attrs', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('layer_type', sa.String(), nullable=True),
    sa.Column('styles', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('visible', sa.Boolean(), nullable=True),
    sa.Column('is_hidden', sa.Boolean(), nullable=True),
    sa.Column('is_system', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_map_layers_id'), 'map_layers', ['id'], unique=False)
    op.create_table('marker_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('marker_type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_marker_types_id'), 'marker_types', ['id'], unique=False)
    op.create_table('menu_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('link', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_menu_items_id'), 'menu_items', ['id'], unique=False)
    op.create_table('social_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_social_groups_id'), 'social_groups', ['id'], unique=False)
    op.create_table('vehicles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('sensor_id', sa.Integer(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('vehicle_mark', sa.String(), nullable=True),
    sa.Column('vehicle_model', sa.String(), nullable=True),
    sa.Column('government_number', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vehicles_id'), 'vehicles', ['id'], unique=False)
    op.create_table('map_objects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('point', Geography(geometry_type='POINT', srid=4326, from_text='ST_GeogFromText', name='geography'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('marker_type_id', sa.Integer(), nullable=True),
    sa.Column('map_layer_id', sa.Integer(), nullable=True),
    sa.Column('json_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('styles', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('object_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(('map_layer_id',), ['map_layers.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(('marker_type_id',), ['marker_types.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('object_uid')
    )
    op.create_index(op.f('ix_map_objects_id'), 'map_objects', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('first_name', sa.String(length=150), nullable=False),
    sa.Column('last_name', sa.String(length=150), nullable=True),
    sa.Column('patronymic', sa.String(length=150), nullable=True),
    sa.Column('email', sqlalchemy_utils.types.email.EmailType(length=255), nullable=True),
    sa.Column('email_verified_at', sa.DateTime(), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('sex', sa.String(), nullable=True),
    sa.Column('position', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('activate_token', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('social_group_id', sa.Integer(), nullable=True),
    sa.Column('roles', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('notify_active', sa.Boolean(), nullable=True),
    sa.Column('birthday', sa.DateTime(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(('social_group_id',), ['social_groups.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('appeal_chats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('appeal_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(length=700), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('parent', sa.Integer(), nullable=True),
    sa.Column('is_hidden', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(('appeal_id',), ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(('creator_id',), ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(('user_id',), ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_appeal_chats_id'), 'appeal_chats', ['id'], unique=False)
    op.create_table('attachments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('link', sa.String(), nullable=False),
    sa.Column('meta', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('owner_type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(('creator_id',), ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_attachments_id'), 'attachments', ['id'], unique=False)
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('body', sa.String(length=700), nullable=True),
    sa.Column('is_hidden', sa.Boolean(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('owner_type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(('creator_id',), ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comments_id'), 'comments', ['id'], unique=False)
    op.create_table('departments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('department_uid', sa.String(), nullable=False),
    sa.Column('director_id', sa.Integer(), nullable=True),
    sa.Column('control_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(('control_id',), ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(('director_id',), ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_departments_id'), 'departments', ['id'], unique=False)
    op.create_table('gkh_uk_companies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('company_form', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('director', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('phones', sa.String(), nullable=True),
    sa.Column('inn', sa.String(), nullable=True),
    sa.Column('ogrn', sa.String(), nullable=True),
    sa.Column('email', sqlalchemy_utils.types.email.EmailType(length=255), nullable=True),
    sa.Column('data', sa.Text(), nullable=True),
    sa.Column('member_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(('member_id',), ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gkh_uk_companies_id'), 'gkh_uk_companies', ['id'], unique=False)
    op.create_table('initiatives',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('address_to', sa.String(), nullable=False),
    sa.Column('locate_address', sa.String(), nullable=True),
    sa.Column('locate', Geography(geometry_type='POINT', srid=4326, from_text='ST_GeogFromText', name='geography'), nullable=True),
    sa.Column('task', sa.String(length=700), nullable=False),
    sa.Column('importance', sa.String(), nullable=False),
    sa.Column('like', sa.Integer(), nullable=True),
    sa.Column('dislike', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('users_voted', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_hidden', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(('creator_id',), ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_initiatives_id'), 'initiatives', ['id'], unique=False)
    op.create_table('marker_histories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('marker_id', sa.Integer(), nullable=True),
    sa.Column('coords', Geography(geometry_type='POINT', srid=4326, from_text='ST_GeogFromText', name='geography'), nullable=True),
    sa.Column('locate_time', sa.DateTime(), nullable=True),
    sa.Column('json_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(('marker_id',), ['map_objects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_marker_histories_id'), 'marker_histories', ['id'], unique=False)
    op.create_table('polls',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(length=700), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('legally_significant', sa.Boolean(), nullable=True),
    sa.Column('closed_at', sa.DateTime(), nullable=True),
    sa.Column('news_notify', sa.Boolean(), nullable=True),
    sa.Column('is_hidden', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(('creator_id',), ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_polls_id'), 'polls', ['id'], unique=False)
    op.create_table('providers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('provider_id', sa.String(), nullable=True),
    sa.Column('provider_name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(('user_id',), ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_providers_id'), 'providers', ['id'], unique=False)
    op.create_table('service_members',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('director_name', sa.String(), nullable=True),
    sa.Column('email', sqlalchemy_utils.types.email.EmailType(length=255), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(('member_id',), ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_service_members_id'), 'service_members', ['id'], unique=False)
    op.create_table('appeal_history_attachments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(('id',), ['attachments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('appeal_themes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('theme', sa.String(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('is_hidden', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(('department_id',), ['departments.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_appeal_themes_id'), 'appeal_themes', ['id'], unique=False)
    op.create_table('employees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('position', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(('department_id',), ['departments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(('user_id',), ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employees_id'), 'employees', ['id'], unique=False)
    op.create_table('gkh_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('street', sa.String(), nullable=True),
    sa.Column('house', sa.String(), nullable=True),
    sa.Column('flat_count', sa.Integer(), nullable=True),
    sa.Column('square', sa.String(), nullable=True),
    sa.Column('floors', sa.String(), nullable=True),
    sa.Column('cad_num', sa.String(), nullable=True),
    sa.Column('company_name', sa.String(), nullable=True),
    sa.Column('coords_lat', sa.String(), nullable=True),
    sa.Column('coords_lng', sa.String(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('link', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(('company_id',), ['gkh_uk_companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gkh_data_id'), 'gkh_data', ['id'], unique=False)
    op.create_table('initiative_considerations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('published_by_id', sa.Integer(), nullable=True),
    sa.Column('responsible_person_id', sa.Integer(), nullable=True),
    sa.Column('initiative_id', sa.Integer(), nullable=True),
    sa.Column('result', sa.String(length=700), nullable=True),
    sa.Column('comment', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(('initiative_id',), ['initiatives.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(('published_by_id',), ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(('responsible_person_id',), ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_initiative_considerations_id'), 'initiative_considerations', ['id'], unique=False)
    op.create_table('poll_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('poll_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(('group_id',), ['social_groups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(('poll_id',), ['polls.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_poll_groups_id'), 'poll_groups', ['id'], unique=False)
    op.create_table('poll_quizzes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('poll_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(length=700), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('quiz_type', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(('poll_id',), ['polls.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_poll_quizzes_id'), 'poll_quizzes', ['id'], unique=False)
    op.create_table('poll_answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('answer_id', sa.Integer(), nullable=False),
    sa.Column('vote', sa.SmallInteger(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(('answer_id',), ['poll_quizzes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(('creator_id',), ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(('question_id',), ['poll_quizzes.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_poll_answers_id'), 'poll_answers', ['id'], unique=False)
    op.create_table('user_appeals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('appeal_theme_id', sa.Integer(), nullable=True),
    sa.Column('executor_id', sa.Integer(), nullable=True),
    sa.Column('deputy_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('problem_body', sa.String(length=700), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('post_address', sa.String(), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('rate', sa.SmallInteger(), nullable=True),
    sa.Column('dispatcher_create', sa.Integer(), nullable=True),
    sa.Column('is_hidden', sa.Boolean(), nullable=True),
    sa.Column('expired_at', sa.DateTime(), nullable=True),
    sa.Column('users_voted', postgresql.ARRAY(sa.Integer()), nullable=True),
    sa.ForeignKeyConstraint(('appeal_theme_id',), ['appeal_themes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(('creator_id',), ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(('deputy_id',), ['deputies.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(('executor_id',), ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(('status_id',), ['appeal_statuses.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_appeals_id'), 'user_appeals', ['id'], unique=False)
    op.create_table('appeal_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('appeal_id', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('connected_person_id', sa.Integer(), nullable=True),
    sa.Column('comment', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('meta', sa.String(), nullable=True),
    sa.Column('is_private', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(('appeal_id',), ['user_appeals.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(('connected_person_id',), ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(('creator_id',), ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_appeal_history_id'), 'appeal_history', ['id'], unique=False)
    op.create_table('appeal_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('appeal_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('comment', sa.String(), nullable=True),
    sa.Column('closed_date', sa.DateTime(), nullable=True),
    sa.Column('is_private', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(('appeal_id',), ['user_appeals.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(('creator_id',), ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(('employee_id',), ['employees.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_appeal_users_id'), 'appeal_users', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('(srid > 0) AND (srid <= 998999)', name='spatial_ref_sys_srid_check'),
    sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    )
    op.drop_index(op.f('ix_appeal_users_id'), table_name='appeal_users')
    op.drop_table('appeal_users')
    op.drop_index(op.f('ix_appeal_history_id'), table_name='appeal_history')
    op.drop_table('appeal_history')
    op.drop_index(op.f('ix_user_appeals_id'), table_name='user_appeals')
    op.drop_table('user_appeals')
    op.drop_index(op.f('ix_poll_answers_id'), table_name='poll_answers')
    op.drop_table('poll_answers')
    op.drop_index(op.f('ix_poll_quizzes_id'), table_name='poll_quizzes')
    op.drop_table('poll_quizzes')
    op.drop_index(op.f('ix_poll_groups_id'), table_name='poll_groups')
    op.drop_table('poll_groups')
    op.drop_index(op.f('ix_initiative_considerations_id'), table_name='initiative_considerations')
    op.drop_table('initiative_considerations')
    op.drop_index(op.f('ix_gkh_data_id'), table_name='gkh_data')
    op.drop_table('gkh_data')
    op.drop_index(op.f('ix_employees_id'), table_name='employees')
    op.drop_table('employees')
    op.drop_index(op.f('ix_appeal_themes_id'), table_name='appeal_themes')
    op.drop_table('appeal_themes')
    op.drop_table('appeal_history_attachments')
    op.drop_index(op.f('ix_service_members_id'), table_name='service_members')
    op.drop_table('service_members')
    op.drop_index(op.f('ix_providers_id'), table_name='providers')
    op.drop_table('providers')
    op.drop_index(op.f('ix_polls_id'), table_name='polls')
    op.drop_table('polls')
    op.drop_index(op.f('ix_marker_histories_id'), table_name='marker_histories')
    op.drop_table('marker_histories')
    op.drop_index(op.f('ix_initiatives_id'), table_name='initiatives')
    op.drop_table('initiatives')
    op.drop_index(op.f('ix_gkh_uk_companies_id'), table_name='gkh_uk_companies')
    op.drop_table('gkh_uk_companies')
    op.drop_index(op.f('ix_departments_id'), table_name='departments')
    op.drop_table('departments')
    op.drop_index(op.f('ix_comments_id'), table_name='comments')
    op.drop_table('comments')
    op.drop_index(op.f('ix_attachments_id'), table_name='attachments')
    op.drop_table('attachments')
    op.drop_index(op.f('ix_appeal_chats_id'), table_name='appeal_chats')
    op.drop_table('appeal_chats')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_map_objects_id'), table_name='map_objects')
    op.drop_table('map_objects')
    op.drop_index(op.f('ix_vehicles_id'), table_name='vehicles')
    op.drop_table('vehicles')
    op.drop_index(op.f('ix_social_groups_id'), table_name='social_groups')
    op.drop_table('social_groups')
    op.drop_index(op.f('ix_menu_items_id'), table_name='menu_items')
    op.drop_table('menu_items')
    op.drop_index(op.f('ix_marker_types_id'), table_name='marker_types')
    op.drop_table('marker_types')
    op.drop_index(op.f('ix_map_layers_id'), table_name='map_layers')
    op.drop_table('map_layers')
    op.drop_index(op.f('ix_deputies_id'), table_name='deputies')
    op.drop_table('deputies')
    op.drop_index(op.f('ix_appeal_statuses_id'), table_name='appeal_statuses')
    op.drop_table('appeal_statuses')
    # ### end Alembic commands ###
